Version Control System:-----
------------------------------
Version Control System (VCS) is a software that helps software developers to work together 
and maintain a complete history of their work.


Listed below are the functions of a VCS:--
----------------------------------------------------------
a).Allows developers to work simultaneously.
b).Does not allow overwriting each other’s changes.
c).Maintains a history of every version.


Following are the types of VCS:--
---------------------------------------------------------
1).Centralized version control system (CVCS):
   ---------------------------------------- 
   a)Centralized version control system (CVCS) uses a central server to store all files and enables team collaboration. 
   b)But the major drawback of CVCS is its single point of failure, i.e., failure of the central server.
   c)Unfortunately, if the central server goes down for an hour, then during that hour, no one can collaborate at all. 
   d)And even in a worst case, if the disk of the central server gets corrupted and proper backup has not been taken, then you will      lose the entire history of the project.

2).Distributed/Decentralized version control system (DVCS):
-----------------------------------------------------------
   a)In this chapter, we will concentrate only on distributed version control system and especially on Git. Git falls under      distributed version control system.
   b)DVCS clients not only check out the latest snapshot of the directory but they also fully mirror the repository. If the server         goes down, then the repository from any client can be copied back to the server to restore it. 
   c)Every checkout is a full backup of the repository. Git does not rely on the central server and that is why you can perform many       operations when you are offline. 
   d)You can commit changes, create branches, view logs, and perform other operations when you are offline. You require network      connection only to publish your changes and take the latest changes.

Advantages of Git:
---------------------
Free and open source:
Git is released under GPL’s open source license. It is available freely over the internet. You can use Git to manage property projects without paying a single penny. As it is an open source, you can download its source code and also perform changes according to your requirements.

Fast and small:
As most of the operations are performed locally, it gives a huge benefit in terms of speed. Git does not rely on the central server; that is why, there is no need to interact with the remote server for every operation. The core part of Git is written in C, which avoids runtime overheads associated with other high-level languages. Though Git mirrors entire repository, the size of the data on the client side is small. This illustrates the efficiency of Git at compressing and storing data on the client side.

Implicit backup:
The chances of losing data are very rare when there are multiple copies of it. Data present on any client side mirrors the repository, hence it can be used in the event of a crash or disk corruption.

Security:
Git uses a common cryptographic hash function called secure hash function (SHA1), to name and identify objects within its database. Every file and commit is check-summed and retrieved by its checksum at the time of checkout. It implies that, it is impossible to change file, date, and commit message and any other data from the Git database without knowing Git.

No need of powerful hardware:
In case of CVCS, the central server needs to be powerful enough to serve requests of the entire team. For smaller teams, it is not an issue, but as the team size grows, the hardware limitations of the server can be a performance bottleneck. In case of DVCS, developers don’t interact with the server unless they need to push or pull changes. All the heavy lifting happens on the client side, so the server hardware can be very simple indeed.